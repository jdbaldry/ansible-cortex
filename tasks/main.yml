---
- include: preflight.yml

- name: "Create {{ group }} system group"
  group:
    name: "{{ group }}"
    system: true
    state: present

- name: "Create {{ user }} system user"
  user:
    name: "{{ user }}"
    system: true
    shell: "/usr/sbin/nologin"
    group: "{{ group }}"
    createhome: false
    home: "{{ data_dir }}"

- name: "Create {{ data_dir }} directory"
  file:
    path: "{{ data_dir }}"
    state: directory
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: 0755

- name: Create configuration directories
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: "{{ group }}"
    mode: 0770
  with_items:
    - "{{ config_dir }}"

- name: Copy configuration file
  template:
    src: "{{ config_template }}"
    dest: "{{ config_dir }}/{{ config_file }}"
    owner: root
    group: "{{ group }}"
    mode: 0640
  notify: Restart service

- name: Copy license file
  copy:
    src: "{{ metrics_enterprise_license_file }}"
    dest: "{{ config_dir }}/license.jwt"
    mode: 0640
    owner: root
    group: "{{ group }}"
  when:
    - enterprise

- name: "Create {{ bin_local_dir }} directory"
  file: path="{{ bin_local_dir }}" state=directory
  delegate_to: localhost
  run_once: true

- name: Download binary
  get_url:
    url: |
      {% if enterprise -%}
      https://storage.googleapis.com/grafana-metrics-enterprise/releases/metrics-enterprise-v{{ metrics_enterprise_version }}-linux-amd64
      {%- else -%}
      https://github.com/cortexproject/cortex/releases/download/v{{ cortex_version }}/cortex-linux-amd64
      {%- endif %}
    dest: "{{ bin_local_dir }}/{{ bin_name }}"
    checksum: |
      {% if enterprise -%}
      sha256:{{ metrics_enterprise_checksum }}
      {%- else -%}
      sha256:{{ cortex_checksum }}
      {%- endif %}
  delegate_to: localhost
  run_once: true

- name: Copy local binary
  copy:
    src: "{{ bin_local_dir }}/{{ bin_name }}"
    dest: "{{ bin_dir }}/{{ bin_name }}"
    mode: 0755
    owner: root
    group: root
  when:
    - bin_local_dir | length > 0
  notify:
    - Restart service

- name: Create systemd service unit
  template:
    src: service.j2
    dest: "/etc/systemd/system/{{ name }}.service"
    owner: root
    group: root
    mode: 0644
  notify:
    - Restart service
